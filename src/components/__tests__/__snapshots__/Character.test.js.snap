// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Character renders correctly 1`] = `
ShallowWrapper {
  "complexSelector": ComplexSelector {
    "buildPredicate": [Function],
    "childrenOfNode": [Function],
    "findWhereUnwrapped": [Function],
  },
  "length": 1,
  "node": <div
    className="character"
>
    <img
        alt="BB8"
        className="character-image"
        src="bb8.jpg"
    />
    <div
        className="character-overlay"
        style={
            Object {
                "backgroundColor": "DarkRed",
              }
        }
    >
        <div
            className="character-overlay-text"
        >
            <h1>
                Least
                 Favorite Character
            </h1>
            <br />
            <b />
            <p>
                Gender: 
            </p>
            <p>
                Height: 
                 (cm)
            </p>
            <p>
                Weight: 
                 (kg)
            </p>
        </div>
    </div>
</div>,
  "nodes": Array [
    <div
      className="character"
>
      <img
            alt="BB8"
            className="character-image"
            src="bb8.jpg"
      />
      <div
            className="character-overlay"
            style={
                  Object {
                        "backgroundColor": "DarkRed",
                      }
            }
      >
            <div
                  className="character-overlay-text"
            >
                  <h1>
                        Least
                         Favorite Character
                  </h1>
                  <br />
                  <b />
                  <p>
                        Gender: 
                  </p>
                  <p>
                        Height: 
                         (cm)
                  </p>
                  <p>
                        Weight: 
                         (kg)
                  </p>
            </div>
      </div>
</div>,
  ],
  "options": Object {},
  "renderer": ReactShallowRenderer {
    "_instance": ShallowComponentWrapper {
      "_calledComponentWillUnmount": false,
      "_compositeType": 2,
      "_context": Object {},
      "_currentElement": <Character />,
      "_debugID": 1,
      "_hostContainerInfo": null,
      "_hostParent": null,
      "_instance": StatelessComponent {
        "_reactInternalInstance": [Circular],
        "context": Object {},
        "props": Object {},
        "refs": Object {},
        "state": null,
        "updater": Object {
          "enqueueCallback": [Function],
          "enqueueCallbackInternal": [Function],
          "enqueueElementInternal": [Function],
          "enqueueForceUpdate": [Function],
          "enqueueReplaceState": [Function],
          "enqueueSetState": [Function],
          "isMounted": [Function],
          "validateCallback": [Function],
        },
      },
      "_mountOrder": 1,
      "_pendingCallbacks": null,
      "_pendingElement": null,
      "_pendingForceUpdate": false,
      "_pendingReplaceState": false,
      "_pendingStateQueue": null,
      "_renderedComponent": NoopInternalComponent {
        "_currentElement": <div
          className="character"
>
          <img
                    alt="BB8"
                    className="character-image"
                    src="bb8.jpg"
          />
          <div
                    className="character-overlay"
                    style={
                              Object {
                                        "backgroundColor": "DarkRed",
                                      }
                    }
          >
                    <div
                              className="character-overlay-text"
                    >
                              <h1>
                                        Least
                                         Favorite Character
                              </h1>
                              <br />
                              <b />
                              <p>
                                        Gender: 
                              </p>
                              <p>
                                        Height: 
                                         (cm)
                              </p>
                              <p>
                                        Weight: 
                                         (kg)
                              </p>
                    </div>
          </div>
</div>,
        "_debugID": 2,
        "_renderedOutput": <div
          className="character"
>
          <img
                    alt="BB8"
                    className="character-image"
                    src="bb8.jpg"
          />
          <div
                    className="character-overlay"
                    style={
                              Object {
                                        "backgroundColor": "DarkRed",
                                      }
                    }
          >
                    <div
                              className="character-overlay-text"
                    >
                              <h1>
                                        Least
                                         Favorite Character
                              </h1>
                              <br />
                              <b />
                              <p>
                                        Gender: 
                              </p>
                              <p>
                                        Height: 
                                         (cm)
                              </p>
                              <p>
                                        Weight: 
                                         (kg)
                              </p>
                    </div>
          </div>
</div>,
      },
      "_renderedNodeType": 0,
      "_rootNodeID": 0,
      "_topLevelWrapper": null,
      "_updateBatchNumber": null,
      "_warnedAboutRefsInRender": false,
    },
    "getRenderOutput": [Function],
    "render": [Function],
  },
  "root": [Circular],
  "unrendered": <Character />,
}
`;
